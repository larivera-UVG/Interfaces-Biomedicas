classdef GUIr17 < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure                   matlab.ui.Figure
        GridLayout                 matlab.ui.container.GridLayout
        LeftPanel                  matlab.ui.container.Panel
        ControladorSwitchLabel     matlab.ui.control.Label
        ControladorSwitch          matlab.ui.control.Switch
        ClaseActualEditFieldLabel  matlab.ui.control.Label
        ClaseActualEditField       matlab.ui.control.NumericEditField
        CenterPanel                matlab.ui.container.Panel
        figFpz                     matlab.ui.control.UIAxes
        figPz                      matlab.ui.control.UIAxes
        figEog                     matlab.ui.control.UIAxes
        figEmg                     matlab.ui.control.UIAxes
        figRobot                   matlab.ui.control.UIAxes
        RightPanel                 matlab.ui.container.Panel
        SeleccioneClaseModoManualButtonGroup  matlab.ui.container.ButtonGroup
        Button                     matlab.ui.control.RadioButton
        Button_2                   matlab.ui.control.RadioButton
        Button_3                   matlab.ui.control.RadioButton
        Button_4                   matlab.ui.control.RadioButton
        Button_5                   matlab.ui.control.RadioButton
        ZCEditFieldLabel           matlab.ui.control.Label
        ZCEditField                matlab.ui.control.NumericEditField
    end

    % Properties that correspond to apps with auto-reflow
    properties (Access = private)
        onePanelWidth = 576;
        twoPanelWidth = 768;
    end

    
    properties (Access = private)      

    end
    

    % Callbacks that handle component events
    methods (Access = private)

        % Code that executes after component creation
        function startupFcn(app)
           
        end

        % Changes arrangement of the app based on UIFigure width
        function updateAppLayout(app, event)
            currentFigureWidth = app.UIFigure.Position(3);
            if(currentFigureWidth <= app.onePanelWidth)
                % Change to a 3x1 grid
                app.GridLayout.RowHeight = {480, 480, 480};
                app.GridLayout.ColumnWidth = {'1x'};
                app.CenterPanel.Layout.Row = 1;
                app.CenterPanel.Layout.Column = 1;
                app.LeftPanel.Layout.Row = 2;
                app.LeftPanel.Layout.Column = 1;
                app.RightPanel.Layout.Row = 3;
                app.RightPanel.Layout.Column = 1;
            elseif (currentFigureWidth > app.onePanelWidth && currentFigureWidth <= app.twoPanelWidth)
                % Change to a 2x2 grid
                app.GridLayout.RowHeight = {480, 480};
                app.GridLayout.ColumnWidth = {'1x', '1x'};
                app.CenterPanel.Layout.Row = 1;
                app.CenterPanel.Layout.Column = [1,2];
                app.LeftPanel.Layout.Row = 2;
                app.LeftPanel.Layout.Column = 1;
                app.RightPanel.Layout.Row = 2;
                app.RightPanel.Layout.Column = 2;
            else
                % Change to a 1x3 grid
                app.GridLayout.RowHeight = {'1x'};
                app.GridLayout.ColumnWidth = {220, '1x', 220};
                app.LeftPanel.Layout.Row = 1;
                app.LeftPanel.Layout.Column = 1;
                app.CenterPanel.Layout.Row = 1;
                app.CenterPanel.Layout.Column = 2;
                app.RightPanel.Layout.Row = 1;
                app.RightPanel.Layout.Column = 3;
            end
        end

        % Selection changed function: 
        % SeleccioneClaseModoManualButtonGroup
        function SeleccioneClaseModoManualButtonGroupSelectionChanged(app, event)
            selectedButton = app.SeleccioneClaseModoManualButtonGroup.SelectedObject;
            switchButtton = app.ControladorSwitch.Value;
            
            if strcmp( switchButtton,'Manual')
                if selectedButton == app.Button
                    app.ZCEditField.Value = 1;
                   % r17.plot(Qtot{1,1})
                elseif selectedButton == app.Button_2
                    %r17.plot(Qtot{1,2})
                    app.ZCEditField.Value = 2;
                elseif selectedButton == app.Button_3
                    %r17.plot(Qtot{1,3})
                    app.ZCEditField.Value = 3;
                elseif selectedButton == app.Button_4
                    %r17.plot(Qtot{1,4})
                    app.ZCEditField.Value = 4;
                else
                   % r17.plot(Qtot{1,5})   
                   app.ZCEditField.Value = 5;
                end
            end
        end

        % Value changed function: ControladorSwitch
        function ControladorSwitchValueChanged(app, event)
        %Controlar modo automatico, el manual como es mas simple se
        %condiciona en los botones
            value = app.ControladorSwitch.Value;
            load('data_1')
            load('trainedModelSVM3.mat')
            load('robotData.mat')
            
            largoBuffer = 1;
            
            Epocas = 3000;
            
            L = largoBuffer*Epocas;

            data = zeros(4,L);
            
            etiquetasRN = zeros(757,1);
            etiquetasSVM = zeros(757,1);
            contEpocs = 1;
            %*****Insertar figuras
            t=1:L;
            
            
            
            if strcmp( value,'Automático')
                h1 = plot(app.figFpz, t, zeros(1,L));
%                 h2 = plot(app.figPz, t, data(1,:));
%                 h3 = plot(app.figEog, t, data(1,:));
%                 h4 = plot(app.figEmg, t, data(1,:));
                
                for i=1:size(fpz,1)
                    n = mod(i,Epocas);
                    
                    if n == 0
                        n = Epocas;
                    end
                    
                    data(:,n)=[fpz(i);
                                pz(i);
                                eog(i);
                                emg(i)];
                            
                    %*****************Figuras
                    
                    h1.YData(n) = fpz(i);
%                     h2.YData(n) = pz(i);
%                     h3.YData(n) = eog(i);
%                     h4.YData(n) = emg(i);
                    drawnow limitrate
                    %**********************
                    if n == Epocas
                       % Calcular metricas 
                %        media = [mean(data(1,:)), metricas(data(1,:),0,0), MMD(data(1,:)), bandpower(data(1,:)), kurtosis(data(1,:));
                %                 mean(data(2,:)), metricas(data(2,:),0,0), MMD(data(2,:)), bandpower(data(2,:)), kurtosis(data(2,:));
                %                 mean(data(3,:)), metricas(data(3,:),0,0), MMD(data(1,:)), bandpower(data(3,:)), kurtosis(data(3,:));
                %                 mean(data(4,:)), metricas(data(4,:),0,0), MMD(data(4,:)), bandpower(data(4,:)), kurtosis(data(4,:))];
                         media = [mean(abs(data(1,:))), metricas(data(1,:),0,0), MMD(data(1,:)), bandpower(data(1,:)), kurtosis(data(1,:)),...
                                mean(abs(data(2,:))), metricas(data(2,:),0,0), MMD(data(2,:)), bandpower(data(2,:)), kurtosis(data(2,:)),...
                                mean(abs(data(3,:))), metricas(data(3,:),0,0), MMD(data(1,:)), bandpower(data(3,:)), kurtosis(data(3,:)),...
                                mean(abs(data(4,:)))];
                        etiquetasSVM(contEpocs)= trainedModelSVM3.predictFcn(media);
                        app.ClaseActualEditField.Value = etiquetasSVM(contEpocs);
                        %etiquetasSVM(contEpocs)
                        
                        %Robot
                        %figure(2); clf;
                        %r17.plot(Qtot{1,etiquetasSVM(contEpocs)})
                
                        % Redes neuronales
                %         ys_prueba = net(media');
                %         etiquetasRN(contEpocs) = vec2ind(ys_prueba); % contiene las etiquetas asignadas
                        
                        contEpocs = contEpocs+1;
                    end
                    
                end
                
            end
            
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.AutoResizeChildren = 'off';
            app.UIFigure.Position = [100 100 860 480];
            app.UIFigure.Name = 'UI Figure';
            app.UIFigure.SizeChangedFcn = createCallbackFcn(app, @updateAppLayout, true);

            % Create GridLayout
            app.GridLayout = uigridlayout(app.UIFigure);
            app.GridLayout.ColumnWidth = {220, '1x', 220};
            app.GridLayout.RowHeight = {'1x'};
            app.GridLayout.ColumnSpacing = 0;
            app.GridLayout.RowSpacing = 0;
            app.GridLayout.Padding = [0 0 0 0];
            app.GridLayout.Scrollable = 'on';

            % Create LeftPanel
            app.LeftPanel = uipanel(app.GridLayout);
            app.LeftPanel.Layout.Row = 1;
            app.LeftPanel.Layout.Column = 1;

            % Create ControladorSwitchLabel
            app.ControladorSwitchLabel = uilabel(app.LeftPanel);
            app.ControladorSwitchLabel.HorizontalAlignment = 'center';
            app.ControladorSwitchLabel.Position = [77 344 68 22];
            app.ControladorSwitchLabel.Text = 'Controlador';

            % Create ControladorSwitch
            app.ControladorSwitch = uiswitch(app.LeftPanel, 'slider');
            app.ControladorSwitch.Items = {'Manual', 'Automático'};
            app.ControladorSwitch.ValueChangedFcn = createCallbackFcn(app, @ControladorSwitchValueChanged, true);
            app.ControladorSwitch.Position = [87 381 45 20];
            app.ControladorSwitch.Value = 'Manual';

            % Create ClaseActualEditFieldLabel
            app.ClaseActualEditFieldLabel = uilabel(app.LeftPanel);
            app.ClaseActualEditFieldLabel.HorizontalAlignment = 'right';
            app.ClaseActualEditFieldLabel.Position = [17 174 73 22];
            app.ClaseActualEditFieldLabel.Text = 'Clase Actual';

            % Create ClaseActualEditField
            app.ClaseActualEditField = uieditfield(app.LeftPanel, 'numeric');
            app.ClaseActualEditField.Position = [105 174 100 22];

            % Create CenterPanel
            app.CenterPanel = uipanel(app.GridLayout);
            app.CenterPanel.Layout.Row = 1;
            app.CenterPanel.Layout.Column = 2;

            % Create figFpz
            app.figFpz = uiaxes(app.CenterPanel);
            title(app.figFpz, 'Fpz')
            xlabel(app.figFpz, 's')
            ylabel(app.figFpz, 'uV')
            app.figFpz.PlotBoxAspectRatio = [1.71875 1 1];
            app.figFpz.Position = [27 316 176 132];

            % Create figPz
            app.figPz = uiaxes(app.CenterPanel);
            title(app.figPz, 'Pz')
            xlabel(app.figPz, 'X')
            ylabel(app.figPz, 'Y')
            app.figPz.PlotBoxAspectRatio = [1.71875 1 1];
            app.figPz.Position = [222 316 176 132];

            % Create figEog
            app.figEog = uiaxes(app.CenterPanel);
            title(app.figEog, 'EOG')
            xlabel(app.figEog, 'X')
            ylabel(app.figEog, 'Y')
            app.figEog.PlotBoxAspectRatio = [1.71875 1 1];
            app.figEog.Position = [27 174 176 132];

            % Create figEmg
            app.figEmg = uiaxes(app.CenterPanel);
            title(app.figEmg, 'EMG')
            xlabel(app.figEmg, 'X')
            ylabel(app.figEmg, 'Y')
            app.figEmg.PlotBoxAspectRatio = [1.71875 1 1];
            app.figEmg.Position = [222 174 176 132];

            % Create figRobot
            app.figRobot = uiaxes(app.CenterPanel);
            title(app.figRobot, 'R17')
            xlabel(app.figRobot, 'X')
            ylabel(app.figRobot, 'Y')
            app.figRobot.PlotBoxAspectRatio = [2.84507042253521 1 1];
            app.figRobot.Position = [27 6 371 169];

            % Create RightPanel
            app.RightPanel = uipanel(app.GridLayout);
            app.RightPanel.Layout.Row = 1;
            app.RightPanel.Layout.Column = 3;

            % Create SeleccioneClaseModoManualButtonGroup
            app.SeleccioneClaseModoManualButtonGroup = uibuttongroup(app.RightPanel);
            app.SeleccioneClaseModoManualButtonGroup.SelectionChangedFcn = createCallbackFcn(app, @SeleccioneClaseModoManualButtonGroupSelectionChanged, true);
            app.SeleccioneClaseModoManualButtonGroup.Title = 'Seleccione Clase Modo Manual';
            app.SeleccioneClaseModoManualButtonGroup.Position = [28 17 164 158];

            % Create Button
            app.Button = uiradiobutton(app.SeleccioneClaseModoManualButtonGroup);
            app.Button.Text = '1';
            app.Button.Position = [11 112 29 22];
            app.Button.Value = true;

            % Create Button_2
            app.Button_2 = uiradiobutton(app.SeleccioneClaseModoManualButtonGroup);
            app.Button_2.Text = '2';
            app.Button_2.Position = [11 90 65 22];

            % Create Button_3
            app.Button_3 = uiradiobutton(app.SeleccioneClaseModoManualButtonGroup);
            app.Button_3.Text = '3';
            app.Button_3.Position = [11 68 65 22];

            % Create Button_4
            app.Button_4 = uiradiobutton(app.SeleccioneClaseModoManualButtonGroup);
            app.Button_4.Text = '4';
            app.Button_4.Position = [11 39 52 22];

            % Create Button_5
            app.Button_5 = uiradiobutton(app.SeleccioneClaseModoManualButtonGroup);
            app.Button_5.Text = '5';
            app.Button_5.Position = [11 17 52 22];

            % Create ZCEditFieldLabel
            app.ZCEditFieldLabel = uilabel(app.RightPanel);
            app.ZCEditFieldLabel.HorizontalAlignment = 'right';
            app.ZCEditFieldLabel.Position = [37 392 25 22];
            app.ZCEditFieldLabel.Text = 'ZC';

            % Create ZCEditField
            app.ZCEditField = uieditfield(app.RightPanel, 'numeric');
            app.ZCEditField.Position = [77 392 100 22];

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = GUIr17

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            % Execute the startup function
            runStartupFcn(app, @startupFcn)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end